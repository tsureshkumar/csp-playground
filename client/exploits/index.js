const util = require('../util');
const config = require('../config');

export const fetchExploitTitles = () => {
  return fetch( config.serverUrl + 'get_exploits.php').then(res => res.json());
};

function loadSource(file) {
  return fetch(file).then(r => r.text());
}

export const fetchExploitSources = exploitName => {
  console.log('loadSources...', exploitName);
  return fetch(config.xssFolder + exploitName + '/sources.php')
    .then(r => r.json())
    .then(files => {
      return Promise.all(
        files.map(f => {
          return loadSource(
             config.serverUrl + 'get_code.php?file=' + config.xssFolderOnly +
              exploitName +
              '/' +
              f.source,
          ).then(j => {
            return {...f, ...{content: j}};
          });
        }),
      );
    });
};

export const fetchExploits = exploitName => {
  return fetch(config.xssFolder + exploitName + '/exploits.php')
    .then(r => r.json())
    .then(exps => exps.map(y => config.xssFolder + exploitName + '/' + y));
};

export const fetchCSPHeader = exploitName => {
  return fetch( config.serverUrl + 'csp_handler.php?xss=' + exploitName).then(r =>
    r.json(),
  );
};

export const updateCSPHeader = (exploitName, csp) => {
  return fetch( config.serverUrl + 'csp_handler.php', {
    method: 'POST',
    body: JSON.stringify({xss: exploitName, csp: csp}),
  }).then(r => r.json());
};

export const fetchReadme = exploitName =>
  fetch(config.xssFolder + exploitName + '/README.md')
    .then(util.handleErrors)
    .then(r => r.text());
